package model.dao;

import java.util.HashMap;
import java.util.Map;

import model.dao.inter.BaseModel;
import model.entity.BaseUser;
import other.utils.SqlEntity;
import other.utils.SqlUtils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class User extends BaseUser<User> implements BaseModel {
	public static final User dao = new User();
	
	/**
	 * 验证码类型 
	 * @Description 
	 * 0:注册, 1:登陆, 2,更换手机号
	 * @author wh
	 * @version 1.0
	 * @since 2016-11-23
	 */
	public enum CodeTypeEnum{
		注册登陆,
		更换手机号
	}
	
	public enum UserRoleEnum{
		系统管理员,
		用户,
		司机,
	}
	
	public enum AcceptStateEnum{
		开启接单,
		关闭接单
	}
	
	@Override
	public Object addDate(HashMap<String, Object> where) {
		return null;
	}

	@Override
	public Object deleteDate(HashMap<String, Object> where) {
		return null;
	}

	@Override
	public Object updateDate(HashMap<String, Object> where) {
		return null;
	}
	
	/**
	 * 后台显示的数据
	 * @author wh
	 * @since 2016年11月29日
	 */
	@Override
	public Object getDataList(HashMap<String, Object> where) {
		// {userName&%lk%=司机, sort=userId, order=asc, page=1, userPhone&%lk%=18256289663, rows=10}
		String sqlStr = "select * from t_user ";
		Integer page = Integer.valueOf( where.get("page").toString());
		Integer pageSize = Integer.valueOf(where.get("rows").toString());
		String sort = where.get("sort").toString();
		String order = where.get("order").toString();
		SqlEntity sqlEntity = SqlUtils.appendWhere(sqlStr, where);
		return paginate(page, pageSize, sqlEntity.getSqlStr() + "order by " + sort + " " + order,
				sqlEntity.getSqlParams());
	}

	/**
	 * 根据手机号码查询该用户
	 * @author wh
	 * @since 2016-11-22
	 * @param phone
	 * @return 
	 */
	public User findUser(String phone) {
		String sql = "SELECT * FROM t_user WHERE userPhone = ?";
		return this.findFirst(sql, phone);
	}
	
	/**
	 * 添加新用户 
	 * @author wh
	 * @since 2016-11-22
	 * @param paramsMap
	 * @return 
	 */
	public boolean addUser(Map<String, Object> paramsMap) {
		this.set("userId", null);
		this.put(paramsMap);
		return this.save();
	}

	/**
	 * 用户登陆 
	 * @author wh
	 * @since 2016-11-22
	 * @param userPhone
	 * @param password
	 * @return 
	 */
	public User login(String userPhone, String userRole) {
		String sql = "SELECT * FROM t_user WHERE userPhone = ? and userRole = ?";
		return this.findFirst(sql, userPhone, userRole);
		
	}

	/**
	 * 给该手机号修改密码
	 * @author wh
	 * @since 2016-11-22
	 * @param phone
	 * @param para
	 * @return
	 */
	public boolean updatePassword(String phone, String password) {
		User user = findUser(phone);
		user.set("password", password);
		return user.update();
	}

	/**
	 * 更换手机号码 
	 * @author wh
	 * @since 2016-11-23
	 * @param oldUserPhone
	 * @param newUserPhone
	 * @return
	 */
	public boolean changeUserPhone(String oldUserPhone, String newUserPhone) {
		User user = findUser(oldUserPhone);
		return user.set("userPhone", newUserPhone).update();
	}

	/**
	 * 根据手机号查询用户
	 * @author wh
	 * @since 2016-12-7
	 * @param userPhone
	 * @return
	 */
	public User findUserByUserPhone(String userPhone) {
		String sql = "SELECT * FROM t_user WHERE userPhone = ?";
		return this.findFirst(sql, userPhone);
	}

	/**
	 * 根据手机号查询司机
	 * @author wh
	 * @since 2017-1-6
	 * @param userPhone
	 * @return 
	 */
	public User findDriveByUserPhone(String userPhone) {
		String sql = "SELECT * FROM t_user WHERE userRole = ? AND userPhone = ?";
		return this.findFirst(sql, UserRoleEnum.司机.ordinal(), userPhone);
	}

	

	


}
